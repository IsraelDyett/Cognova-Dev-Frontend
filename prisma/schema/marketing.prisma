model Subscription {
  id          String    @id @default(cuid())
  workspaceId String    @unique
  planId      String?
  status      String
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  payments    Payment[]
  plan         Plan?     @relation(fields: [planId], references: [id])
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}

model Plan {
  id            String         @id @default(cuid())
  displayName   String
  name          String         @unique
  description   String?        @db.Text
  billingCycle  BillingCycle   @default(MONTHLY)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  models        Model[]
  features      PlanFeature[]
  subscriptions Subscription[]
  techniques    Technique[]
  workspaces    Workspace[]

  @@map("plans")
}

model PlanFeature {
  id          String   @id @default(cuid())
  planId      String
  name        String
  description String?
  allowed     Boolean  @default(true)
  createdAt   DateTime @default(now())
  plan         Plan     @relation(fields: [planId], references: [id], onDelete: Cascade)

  @@map("plan_features")
}

model Payment {
  id              String         @id @default(cuid())
  workspaceId     String
  subscriptionId  String?
  amount          Float
  paymentMethodId String?
  status          PaymentStatus  @default(PENDING)
  paidAt          DateTime
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  invoices        Invoice[]
  paymentMethod   PaymentMethod? @relation(fields: [paymentMethodId], references: [id])
  subscription    Subscription?   @relation(fields: [subscriptionId], references: [id], onDelete: SetNull)
  workspace       Workspace      @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  @@map("payments")
}

model PaymentMethod {
  id          String              @id @default(cuid())
  name        String              @unique
  displayName String
  status      PaymentMethodStatus @default(ACTIVE)
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  payments    Payment[]

  @@map("payment_methods")
}

model Invoice {
  id          String   @id @default(cuid())
  paymentId   String?
  invoiceCode String
  issuedAt    DateTime
  dueDate     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  payment     Payment? @relation(fields: [paymentId], references: [id], onDelete: SetNull)

  @@map("invoices")
}
