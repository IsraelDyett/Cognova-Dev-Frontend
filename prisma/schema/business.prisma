model Business {
    id          String   @id @default(cuid())
    workspaceId String
    name        String
    type        String
    description String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now()) @updatedAt

    products       BusinessProduct[]
    locations      BusinessLocation[]
    operatingHours BusinessOperatingHours[]
    workspace      Workspace                @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
    configurations BusinessConfig?
    bots           Bot[]

    @@map("businesses")
}

model BusinessConfig {
    id                       String   @id @default(cuid())
    businessId               String   @unique
    deliveryFee              Float?
    estimatedDeliveryArrival String?
    minDeliveryOrderAmount   Float?
    returnPeriod             String?
    warrantyPeriod           String?
    hasDelivery              Boolean  @default(false)
    acceptsReturns           Boolean  @default(false)
    hasWarranty              Boolean  @default(false)
    currency                 String   @default("USD")
    createdAt                DateTime @default(now())
    updatedAt                DateTime @default(now()) @updatedAt

    business Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

    @@map("business_configs")
}

model BusinessProduct {
    id          String   @id @default(cuid())
    businessId  String
    categoryId  String?
    name        String
    description String?
    price       Float
    stock       String?  @default("IN_STOCK")
    images      String[]
    isActive    Boolean  @default(true)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now()) @updatedAt

    business Business         @relation(fields: [businessId], references: [id], onDelete: Cascade)
    category ProductCategory? @relation(fields: [categoryId], references: [id])

    @@map("business_products")
}

model BusinessLocation {
    id         String   @id @default(cuid())
    businessId String
    name       String
    address    String
    city       String
    country    String
    phone      String?
    email      String?
    isMain     Boolean  @default(false)
    createdAt  DateTime @default(now())
    updatedAt  DateTime @default(now()) @updatedAt

    business Business                 @relation(fields: [businessId], references: [id], onDelete: Cascade)
    hours    BusinessOperatingHours[]

    @@map("business_locations")
}

model BusinessOperatingHours {
    id         String    @id @default(cuid())
    businessId String
    locationId String?
    dayOfWeek  WeekDays?
    openTime   String
    closeTime  String
    isClosed   Boolean   @default(false)
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @default(now()) @updatedAt

    business Business          @relation(fields: [businessId], references: [id], onDelete: Cascade)
    location BusinessLocation? @relation(fields: [locationId], references: [id])

    @@map("business_operating_hours")
}

model ProductCategory {
    id          String            @id @default(cuid())
    name        String
    description String?
    createdAt   DateTime          @default(now())
    updatedAt   DateTime          @default(now()) @updatedAt
    products    BusinessProduct[]

    @@map("product_categories")
}
