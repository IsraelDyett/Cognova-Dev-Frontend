model Business {
    id             String   @id @default(cuid())
    workspaceId    String
    name           String
    type           String
    description    String?
    hasDelivery    Boolean  @default(false)
    hasPickup      Boolean  @default(false)
    acceptsReturns Boolean  @default(false)
    hasWarranty    Boolean  @default(false)
    createdAt      DateTime @default(now())
    updatedAt      DateTime @default(now()) @updatedAt

    products       BusinessProduct[]
    locations      BusinessLocation[]
    categories     BusinessCategory[]
    operatingHours BusinessOperatingHours[]
    workspace      Workspace                @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
    configurations BusinessConfig?
    bots           Bot[]

    @@map("businesses")
}

model BusinessConfig {
    id                       String   @id @default(cuid())
    businessId               String   @unique
    deliveryFee              Float?
    estimatedDeliveryArrival String?
    minOrderAmount           Float?
    taxRate                  Float?
    returnPeriodDays         Int?
    warrantyPeriodDays       Int?
    currency                 String   @default("USD")
    createdAt                DateTime @default(now())
    updatedAt                DateTime @default(now()) @updatedAt

    business Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

    @@map("business_configs")
}

model BusinessCategory {
    id          String   @id @default(cuid())
    businessId  String
    name        String
    description String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now()) @updatedAt

    business Business          @relation(fields: [businessId], references: [id], onDelete: Cascade)
    products BusinessProduct[]

    @@map("business_categories")
}

model BusinessProduct {
    id          String   @id @default(cuid())
    businessId  String
    categoryId  String?
    name        String
    description String?
    price       Float
    stock       Int      @default(0)
    sku         String?
    images      String[]
    isActive    Boolean  @default(true)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now()) @updatedAt

    business Business          @relation(fields: [businessId], references: [id], onDelete: Cascade)
    category BusinessCategory? @relation(fields: [categoryId], references: [id])

    @@map("business_products")
}

model BusinessLocation {
    id         String   @id @default(cuid())
    businessId String
    name       String
    address    String
    city       String
    state      String?
    country    String
    postalCode String?
    phone      String?
    email      String?
    isMain     Boolean  @default(false)
    createdAt  DateTime @default(now())
    updatedAt  DateTime @default(now()) @updatedAt

    business Business                 @relation(fields: [businessId], references: [id], onDelete: Cascade)
    hours    BusinessOperatingHours[]

    @@map("business_locations")
}

model BusinessOperatingHours {
    id         String   @id @default(cuid())
    businessId String
    locationId String?
    dayOfWeek  Int
    openTime   String
    closeTime  String
    isClosed   Boolean  @default(false)
    createdAt  DateTime @default(now())
    updatedAt  DateTime @default(now()) @updatedAt

    business Business          @relation(fields: [businessId], references: [id], onDelete: Cascade)
    location BusinessLocation? @relation(fields: [locationId], references: [id])

    @@map("business_operating_hours")
}
